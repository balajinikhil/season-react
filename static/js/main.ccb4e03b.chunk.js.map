{"version":3,"sources":["seasonDetail.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","seasonDetail","props","lat","month","season","Date","getMonth","className","Spinner","message","App","state","errMessage","window","navigator","geolocation","getCurrentPosition","suc","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"2MAGMA,G,MAAe,CACjBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,mBACNC,SAAU,eAyCDE,EAvBO,SAACC,GAEnB,IAfeC,EAAIC,EAefC,GAfWF,EAeQD,EAAMC,KAfVC,GAee,IAAIE,MAAOC,YAbjC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAQH,EAGLP,EAAaS,GAAhCP,EAHwB,EAGxBA,KAAMC,EAHkB,EAGlBA,SAMX,OACI,yBAAKS,UAAS,yBAAoBH,IAClC,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aCzBLU,EAbC,SAACP,GACjB,OAEI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WCF7CC,E,4MACFC,MAAQ,CAACT,IAAI,KAAMU,WAAW,I,kEAEV,IAAD,OACfC,OAAOC,UAAUC,YAAYC,oBAAmB,SAACC,GAC7C,EAAKC,SAAS,CAAChB,IAAIe,EAAIE,OAAOC,cAChC,SAACC,GACC,EAAKH,SAAS,CAACN,WAAWS,EAAIZ,e,sCAKlC,OAAGa,KAAKX,MAAMT,MAAQoB,KAAKX,MAAMC,WAEzB,6BACI,kBAAC,EAAD,CAAcV,IAAKoB,KAAKX,MAAMT,OAKvCoB,KAAKX,MAAMC,aAAeU,KAAKX,MAAMT,IAEhC,6BACI,sCAAYoB,KAAKX,MAAMC,aAM/B,kBAAC,EAAD,CAASH,QAAQ,qC,+BAWrB,OACI,6BACGa,KAAKC,qB,GA1CFC,IAAMC,WAgDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.ccb4e03b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './seasonDetail.css'\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n      text: \"Let's hit the beach!\",\r\n      iconName: 'sun'\r\n    },\r\n    winter: {\r\n      text: 'Burr it is cold!',\r\n      iconName: 'snowflake'\r\n    }\r\n  };\r\n\r\n\r\nconst getSeason = (lat,month)=>{\r\n\r\n    if( month < 2 && month < 9 ){\r\n       return  lat > 0 ? 'summer' : 'winter'\r\n    }else {\r\n        return lat > 0 ? 'winter' : 'summer';\r\n      }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst seasonDetail  = (props) => {\r\n\r\n    let season = getSeason(props.lat, new Date().getMonth())\r\n    let {text, iconName } = seasonConfig[season]\r\n    \r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n        <i className={`icon-left massive ${iconName} icon`} />\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right massive ${iconName} icon`} />\r\n      </div>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default seasonDetail;","import React from 'react'\r\n\r\n\r\nconst Spinner = (props)=>{\r\nreturn (\r\n    \r\n    <div className=\"ui active dimmer\">\r\n        <div className=\"ui big text loader\">{props.message}</div>\r\n    </div>\r\n \r\n)\r\n\r\n\r\n}\r\n\r\n\r\nexport default Spinner","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport SeasonDetail from './seasonDetail'\r\nimport Spinner from './Spinner'\r\n\r\nclass App extends React.Component{\r\n    state = {lat:null, errMessage:''}\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition((suc)=>{\r\n            this.setState({lat:suc.coords.latitude})  \r\n        },(err)=>{\r\n            this.setState({errMessage:err.message})\r\n        })\r\n    }\r\n\r\n    renderContent(){\r\n        if(this.state.lat && !this.state.errMessage){\r\n            return (\r\n                <div>\r\n                    <SeasonDetail lat={this.state.lat} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(this.state.errMessage && !this.state.lat ){\r\n            return(\r\n                <div>\r\n                    <h1>Error: {this.state.errMessage}</h1>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Spinner message=\"Please accept location request\" />\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n              {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}